<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html
xmlns="http://www.w3.org/1999/xhtml" lang="en-US"><head
profile="http://gmpg.org/xfn/11"><link
rel="stylesheet" type="text/css" href="http://leetcode.com/wp-content/cache/minify/000000/fY7BDgIhDER_aBE9-EEFKpAssGm7Ufx6uyzxpodmmubNdK6Wpa-43C2EkqtxQBfV5WbdHkLfCJmt24xvhNbr_sUU8TtLK_mNwRB6rKJYKao80DP5eZir6NXGYFiADIHkGgdzrkcWQW_VcK8CL5NyTKuOIA1Mf05itvuNS8KCbGOWtLspfw2PNgq3ym0F_gA.css" media="all" /><link
rel="stylesheet" type="text/css" href="http://leetcode.com/wp-content/cache/minify/000000/M9Qvzy9KKShKLS7WLcgvKM1JLALSxSXF-sUllTmp-uUFBQA.css" media="all" /><script type="text/javascript" src="http://leetcode.com/wp-content/cache/minify/000000/LYtRCgMhDEQvZBpKe58SNaiLG9skS-vt68J-DAzz3jxw-xysM9yxZDAnBSVvUnCztZgukJTmELApTj-ordS-4qynsze5hNuq4fuGNMRZHL3yzobxyHnGYYavJglLH5F6eCLl5UMkPX9_.js"></script><meta
http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta
name="viewport" content="width=device-width, initial-scale=1.0" /><title>January | 2011 | LeetCode</title><link
rel="pingback" href="http://leetcode.com/xmlrpc.php" /><link
rel="shortcut icon" href="http://leetcode.com/wp-content/themes/buddyboss-child/_inc/images/favicon.ico" type="image/x-icon"><link
rel="alternate" type="application/rss+xml" title="LeetCode &raquo; Feed" href="http://leetcode.com/feed" /><link
rel="alternate" type="application/rss+xml" title="LeetCode &raquo; Comments Feed" href="http://leetcode.com/comments/feed" /><link
rel='stylesheet' id='gdsr_style_main-css'  href='http://leetcode.com/wp-content/plugins/gd-star-rating/css/gdsr.css.php?t=1366376824&#038;s=a05i05m20k20c05r05%23121620243046%23121620243240%23s1pchristmas%23s1pcrystal%23s1pdarkness%23s1poxygen%23s1goxygen_gif%23s1pplain%23s1ppumpkin%23s1psoft%23s1pstarrating%23s1pstarscape%23t1pclassical%23t1pstarrating%23t1gstarrating_gif%23lsgflower%23lsgradar&#038;o=off&#038;ver=1.9.22' type='text/css' media='all' /><script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.2.0","is_admin":"0","ajaxurl":"http:\/\/leetcode.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script><script type='text/javascript'>
/* <![CDATA[ */
var BP_DTheme = {"my_favs":"My Likes","accepted":"Accepted","rejected":"Rejected","show_all_comments":"Show all comments for this thread","show_all":"Show all","comments":"comments","close":"Close","view":"View","mark_as_fav":"Like","remove_fav":"Unlike","add_photo":"Add Photo","cancel":"Cancel","failed":"Failed","person":"person","people":"people","like":"like","likes":"likes","this_1":"this"};
/* ]]> */
</script><script type="text/javascript">var ajaxurl = 'http://leetcode.com/wp-admin/admin-ajax.php';</script><style type='text/css'>#sidebar span.collapsing.archives {
        border:0;
        padding:0; 
        margin:0; 
        cursor:pointer;
} 

#sidebar span.monthCount, span.yearCount {text-decoration:none; color:#333}
#sidebar li.collapsing.archives a.self {font-weight:bold}
#sidebar ul.collapsing.archives.list ul.collapsing.archives.list:before {content:\'\';} 
#sidebar ul.collapsing.archives.list li.collapsing.archives:before {content:\'\';} 
#sidebar ul.collapsing.archives.list li.collapsing.archives {list-style-type:none}
#sidebar ul.collapsing.archives.list li {
       margin:0 0 0 .8em;
       text-indent:-1em}
#sidebar ul.collapsing.archives.list li.collapsing.archives.item:before {content: \'\\00BB \\00A0\' !important;} 
#sidebar ul.collapsing.archives.list li.collapsing.archives .sym {
   font-size:1.2em;
   font-family:Monaco, \'Andale Mono\', \'FreeMono\', \'Courier new\', \'Courier\', monospace;
   cursor:pointer;
    padding-right:15px;}
#sidebar ul.collapsing.archives.list span.collapsing.archives.collapse .sym {
    background-image: url(/wp-content/plugins/collapsing-archives/img/list-collapse.gif);
}
#sidebar ul.collapsing.archives.list span.collapsing.archives.expand .sym {
    background-image: url(/wp-content/plugins/collapsing-archives/img/list-expand.gif);
}</style><script type="text/javascript">
//<![CDATA[
var gdsr_cnst_nonce = "344a153a23";
var gdsr_cnst_ajax = "http://leetcode.com/wp-content/plugins/gd-star-rating/ajax.php";
var gdsr_cnst_button = 1;
var gdsr_cnst_cache = 0;
// ]]>
</script><!--[if IE]><style type="text/css">.ratemulti .starsbar .gdcurrent { -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)"; filter: alpha(opacity=70); }</style><![endif]--><style type="text/css" media="print">#wpadminbar { display:none; }</style><style type="text/css" media="screen">
	html { margin-top: 28px !important; }
	* html body { margin-top: 28px !important; }
</style><script type="text/javascript"> jQuery(document).ready( function() { jQuery("a.confirm").click( function() { if ( confirm( 'Are you sure?' ) ) return true; else return false; }); });</script></head><body
class="archive date admin-bar no-customize-support no-js buddyboss-active-pics buddyboss-active-wall admin-bar" id="bp-default"> <!--[if lte IE 6]><script src="http://leetcode.com/wp-content/themes/buddyboss/_inc/js/ie6/warning.js"></script><script>window.onload=function(){e("http://leetcode.com/wp-content/themes/buddyboss-child/_inc/js/ie6/")}</script><![endif]--><script type="text/javascript">//<![CDATA[
(function(){var c=document.body.className;c=c.replace(/no-js/,'js');document.body.className=c;})();
//]]></script><div
id="top-hdr-bg"></div><div
class="menu-bg"></div><div
id="wrapper"><div
id="header"><div
class="padder"><div
id="logo"> <a
href="http://leetcode.com" title="Home"><img
src="http://leetcode.com/wp-content/uploads/2012/12/leetcodelogo.png"/></a></div><div
class="menu-bg"></div><ul
class="sf-menu"><li
class="page_item page-item-2"><a
href="http://leetcode.com/about">About</a></li><li
class="page_item page-item-908"><a
href="http://leetcode.com/activity">Activity</a></li><li
class="page_item page-item-1466"><a
href="http://leetcode.com/discuss">Discuss</a></li><li
class="page_item page-item-1658"><a
href="http://leetcode.com/donate">Donate</a></li><li
class="page_item page-item-907"><a
href="http://leetcode.com/members">Members</a></li><li
class="page_item page-item-370"><a
href="http://leetcode.com/onlinejudge">Online Judge</a></li></ul></div></div><div
id="container"><div
id="content" class="two_column"><div
class="padder"><div
class="page" id="blog-archives" role="main"><h3 class="pagetitle">You are browsing the archive for   2011  January.</h3><div
id="post-76" class="post-76 post type-post status-publish format-standard hentry category-binary-search"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/find-k-th-smallest-element-in-union-of.html" rel="bookmark" title="Permanent Link to Find the k-th Smallest Element in the Union of Two Sorted Arrays">Find the k-th Smallest Element in the Union of Two Sorted Arrays</a></h2><p
class="date">January 27, 2011 <span>in <a
href="http://leetcode.com/category/binary-search" title="View all posts in binary search" rel="category tag">binary search</a></span></p><div
class="entry"><blockquote><p>Given two sorted arrays A, B of size <i>m</i> and <i>n</i> respectively. Find the k-th smallest element in the union of A and B. You can assume that there are no duplicate elements.</p></blockquote><p> <a
href="http://leetcode.com/2011/01/find-k-th-smallest-element-in-union-of.html#more-76" class="more-link">Read the rest of this entry &rarr;</a></p></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/find-k-th-smallest-element-in-union-of.html#comments" title="Comment on Find the k-th Smallest Element in the Union of Two Sorted Arrays">90 Comments &#187;</a></span></p></div></div><div
id="post-75" class="post-75 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/sliding-window-maximum.html" rel="bookmark" title="Permanent Link to Sliding Window Maximum">Sliding Window Maximum</a></h2><p
class="date">January 25, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>A long array A[] is given to you. There is a sliding window of size <em>w</em> which is moving from the very left of the array to the very right. You can only see the <em>w</em> numbers in the window. Each time the sliding window moves rightwards by one position. Following is an example:<br
/> The array is [1 3 -1 -3 5 3 6 7], and <em>w</em> is 3.</p><pre>Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7</pre><p><strong>Input</strong>: A long array A[], and a window width w<br
/> <strong>Output</strong>: An array B[], B[i] is the maximum value of from A[i] to A[i+w-1]<br
/> <strong>Requirement</strong>: Find a good optimal way to get B[i]</p></blockquote><p> <a
href="http://leetcode.com/2011/01/sliding-window-maximum.html#more-75" class="more-link">Read the rest of this entry &rarr;</a></p></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/sliding-window-maximum.html#comments" title="Comment on Sliding Window Maximum">65 Comments &#187;</a></span></p></div></div><div
id="post-74" class="post-74 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/nuts-in-oasis-interview-question-from.html" rel="bookmark" title="Permanent Link to Nuts in an Oasis">Nuts in an Oasis</a></h2><p
class="date">January 20, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>A pile of nuts is in an oasis, across a desert from a town. The pile contains &#8216;N&#8217; kg of nuts, and the town is &#8216;D&#8217; kilometers away from the pile.</p><p>The goal of this problem is to write a program that will compute &#8216;X&#8217;, the maximum amount of nuts that can be transported to the town.</p><p>The nuts are transported by a horse drawn cart that is initially next to the pile of nuts. The cart can carry at most &#8216;C&#8217; kilograms of nuts at any one time. The horse uses the nuts that it is carrying as fuel. It consumes &#8216;F&#8217; kilograms of nuts per kilometer traveled regardless of how much weight it is carrying in the cart. The horse can load and unload the cart without using up any nuts.</p><p>Your program should have a function that takes as input 4 real numbers D,N,F,C and returns one real number: &#8216;X&#8217;</p></blockquote><p> <a
href="http://leetcode.com/2011/01/nuts-in-oasis-interview-question-from.html#more-74" class="more-link">Read the rest of this entry &rarr;</a></p></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/nuts-in-oasis-interview-question-from.html#comments" title="Comment on Nuts in an Oasis">34 Comments &#187;</a></span></p></div></div><div
id="post-73" class="post-73 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/studious-student-problem-analysis.html" rel="bookmark" title="Permanent Link to Studious Student Problem Analysis">Studious Student Problem Analysis</a></h2><p
class="date">January 10, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>You’ve been given a list of words to study and memorize. Being a  diligent student of language and the arts, you’ve decided to not study  them at all and instead make up pointless games based on them. One game  you’ve come up with is to see how you can concatenate the words to  generate the lexicographically lowest possible string. <a
href="http://leetcode.com/2011/01/studious-student-problem-analysis.html#more-73" class="more-link">Read the rest of this entry &rarr;</a></p></blockquote></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/studious-student-problem-analysis.html#comments" title="Comment on Studious Student Problem Analysis">26 Comments &#187;</a></span></p></div></div><div
id="post-72" class="post-72 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/peg-game-problem-analysis.html" rel="bookmark" title="Permanent Link to Peg Game Problem Analysis">Peg Game Problem Analysis</a></h2><p
class="date">January 10, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>At the arcade, you can play a simple game where a ball is dropped into the top of the game, from a position of your choosing. There are a number of pegs that the ball will bounce off of as it drops through the game. Whenever the ball hits a peg, it will bounce to the left with probability 0.5 and to the right with probability 0.5. The one exception to this is when it hits a peg on the far left or right side, in which case it always bounces towards the middle.</p><p>When the game was first made, the pegs where arranged in a regular grid. However, it’s an old game, and now some of the pegs are missing. Your goal in the game is to get the ball to fall out of the bottom of the game in a specific location. Your task is, given the arrangement of the game, to determine the optimal place to drop the ball, such that the probability of getting it to this specific location is maximized.</p><p>The image below shows an example of a game with five rows of five columns. Notice that the top row has five pegs, the next row has four pegs, the next five, and so on. With five columns, there are four choices to drop the ball into (indexed from 0). Note that in this example, there are three pegs missing. The top row is row 0, and the leftmost peg is column 0, so the coordinates of the missing pegs are (1,1), (2,1) and (3,2). In this example, the best place to drop the ball is on the far left, in column 0, which gives a 50% chance that it will end in the goal.</p><pre>x.x.x.x.x
 x...x.x
x...x.x.x
 x.x...x
x.x.x.x.x
 G
</pre><p>‘x’ indicates a peg, ‘.’ indicates empty space.</p><p><b>Input</b><br
/>You should first read an integer <b>N</b>, the number of test cases. Each of the next <b>N </b>lines will then contain a single test case. Each test case will start with integers <b>R </b>and <b>C</b>, the number of rows and columns (<b>R </b>will be odd). Next, an integer <b>K </b>will specify the target column. Finally, an integer <b>M </b>will be followed by <b>M </b>pairs of integer <b>r<sub>i</sub></b> and <b>c<sub>i</sub></b>, giving the locations of the missing pegs.</p><p><b>Constraints</b><br
/>1 = <b>N</b> = 100<br
/>3 = <b>R</b>,<b>C</b> = 100</p><p>The top and bottom rows will not have any missing pegs.<br
/>Other parameters will all be valid, given <b>R </b>and <b>C</b></p><p><b>Output</b><br
/>For each test case, you should output an integer, the location to drop the ball into, followed by the probability that the ball will end in columns <b>K</b>, formatted with exactly six digits after the decimal point (round the last digit, don’t truncate).</p><p><b>Notes</b><br
/>The input will be designed such that minor rounding errors will not impact the output (i.e. there will be no ties or near — up to 1E-9 — ties, and the direction of rounding for the output will not be impacted by small errors).</p></blockquote><style type="text/css">.hiblock {  padding:10px;  overflow:auto;  background:none repeat scroll 0 0 #FFF7F0;  border:1px solid #CCCCCC;}</style><p>Here is my problem analysis for Facebook Hacker Cup Qualification Round: Peg Game.</p><p><u><b>Peg Game Problem Analysis:</b></u><br
/>This is the most confusing problem of the three problems due to the problem description being unnecessary long and ambiguous. You can see how many people are asking clarifications for this problem in the wall posts compared to the other problems (I really think Facebook should create a clarification section to answer people&#8217;s questions). Besides, the example they used to illustrate the problem is not included in the sample input, which doesn&#8217;t help at all.</p><div
style="text-align: center;"><a
href="http://2.bp.blogspot.com/_UElib2WLeDE/TSvQrmRgLqI/AAAAAAAACcQ/uCnM5VuUJTY/s1600/Galton-board.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img
border="0" height="331" src="http://2.bp.blogspot.com/_UElib2WLeDE/TSvQrmRgLqI/AAAAAAAACcQ/uCnM5VuUJTY/s400/Galton-board.jpg" width="400" /></a><span
style="font-size: x-small;"><br
/></span></div><div
style="text-align: center;"><span
style="font-size: x-small;"> A <a
href="http://en.wikipedia.org/wiki/Galton_board">Galton box</a> (also known as the bean machine) is a machine consists of a vertical board with interleaved rows of  pins. Balls are dropped from the top, and bounce left and right as they  hit the pins. Eventually, they are collected into one-ball-wide bins at  the bottom. The height of ball columns in the bins approximates a <a
href="http://en.wikipedia.org/wiki/Normal_distribution" title="Normal distribution">bell curve</a>.</span></div><p>It definitely takes me more than few times re-reading the problem description to finally &#8220;guess&#8221; what they really mean. Anyway, after understanding the problem, it is not that difficult to code the solution using a direct simulation.</p><p>However, there are a few places where you need to be careful, and I found that most people fall into this fallacy below:<div
class="hiblock">Count the total number of ways to reach the goal, then divide it by the total number of ways to reach the bottom.</div><p>Why the above approach is incorrect? This is simply because one necessary condition for the above statement to be true is that ways that reaches the bottom must all be equally likely. Unfortunately, this is not necessarily true.</p><p>The correct method is to multiply the probabilities as the ball falls in a step-wise fashion. You would also need to determine if the ball is at an edge peg. If it is at an edge peg, then the ball always fall toward the opposite direction of the edge peg with 100% chance. On the other hand, if it is not at an edge peg, then it will fall in either direction with 50-50 chance.</p><p>Below is the coded solution for <b>Peg Game</b>.</p><p></p><div
id="crayon-52a3fcb00719f" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
char pegs[2000][2000];
void initPegs(int R, int C) {
  int c, CLim, k;
  for (int r = 0; r &lt; R; r++) {
    if (r%2==0) {CLim = C-1; k = 0;}
    else {CLim = C-2; k = 1; pegs[r][0] = '#';}
    for (c = 0; c &lt; CLim; c++) {
      pegs[r][2*c+k] = 'x';
      pegs[r][2*c+1+k] = '.';
    }
    pegs[r][2*c+k] = 'x';
    pegs[r][2*c+1+k] = '#';
  }
}

void setMissingPeg(int r, int c) {
  if (r % 2 == 0) {
    pegs[r][2*c] = '.';
  } else {
    pegs[r][2*c+1] = '.';
  }
}

double ways[2000][2000];
double putBall(int colK, int targetCol, int R, int C) {
  for (int i = 0; i &lt; 2000; i++)
    for (int j = 0; j &lt; 2000; j++)
      ways[i][j] = 0.0;
  ways[0][2*colK+1] = 1.0;
  for (int i = 1; i &lt; R; i++) {
    for (int j = 0; j &lt; 2*C-1; j++) {
      if (pegs[i][j] == '.') {
        if (pegs[i][j-1] == 'x') {
          if (i%2 == 1 &amp;&amp; j == 2)
            ways[i][j] += ways[i-1][j-1];
          else
            ways[i][j] += .5 * ways[i-1][j-1];
        }
        if (pegs[i][j+1] == 'x') {
          if (i%2 == 1 &amp;&amp; j == 2*C-4)
            ways[i][j] += ways[i-1][j+1];
          else
            ways[i][j] += .5 * ways[i-1][j+1];
        }
        if (pegs[i-1][j] == '.') {
          ways[i][j] += ways[i-1][j];
        }
      }
    }
  }
  return ways[R-1][1+2*targetCol];
}

int main() {
  int N, R, C, K, M, r, c;
  cin &gt;&gt; N;
  for (int i = 0; i &lt; N; i++) {
    cin &gt;&gt; R &gt;&gt; C;
    initPegs(R, C);
    cin &gt;&gt; K;
    cin &gt;&gt; M;
    for (int j = 0; j &lt; M; j++) {
      cin &gt;&gt; r &gt;&gt; c;
      setMissingPeg(r, c);
    }
    int maxCol = 0;
    double maxP = 0.0;
    for (int j = 0; j &lt; C-1; j++) {
      double p = putBall(j, K, R, C);
      if (p &gt; maxP) {
        maxP = p;
        maxCol = j;
      }
    }
    printf("%d %.6f\n", maxCol, maxP);
  }
}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fcb00719f-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-2">2</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-4">4</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-6">6</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-8">8</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-10">10</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-12">12</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-13">13</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-14">14</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-15">15</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-16">16</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-17">17</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-18">18</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-19">19</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-20">20</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-21">21</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-22">22</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-23">23</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-24">24</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-25">25</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-26">26</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-27">27</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-28">28</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-29">29</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-30">30</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-31">31</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-32">32</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-33">33</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-34">34</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-35">35</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-36">36</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-37">37</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-38">38</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-39">39</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-40">40</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-41">41</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-42">42</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-43">43</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-44">44</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-45">45</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-46">46</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-47">47</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-48">48</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-49">49</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-50">50</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-51">51</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-52">52</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-53">53</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-54">54</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-55">55</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-56">56</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-57">57</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-58">58</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-59">59</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-60">60</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-61">61</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-62">62</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-63">63</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-64">64</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-65">65</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-66">66</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-67">67</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-68">68</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-69">69</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-70">70</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-71">71</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-72">72</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-73">73</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-74">74</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-75">75</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fcb00719f-76">76</div><div
class="crayon-num" data-line="crayon-52a3fcb00719f-77">77</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fcb00719f-1"><span
class="t">char</span><span
class="h"> </span><span
class="v">pegs</span><span
class="sy">[</span><span
class="cn">2000</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2000</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-2"><span
class="t">void</span><span
class="h"> </span><span
class="e">initPegs</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-3"><span
class="h">&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="i">c</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">CLim</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">k</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-4"><span
class="h">&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">r</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">r</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">r</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">r</span><span
class="o">%</span><span
class="cn">2</span><span
class="o">==</span><span
class="cn">0</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span><span
class="v">CLim</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">C</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">;</span><span
class="h"> </span><span
class="v">k</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">else</span><span
class="h"> </span><span
class="sy">{</span><span
class="v">CLim</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">C</span><span
class="o">-</span><span
class="cn">2</span><span
class="sy">;</span><span
class="h"> </span><span
class="v">k</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">1</span><span
class="sy">;</span><span
class="h"> </span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">0</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'#'</span><span
class="sy">;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">c</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">c</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">CLim</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">c</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="o">+</span><span
class="i">k</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'x'</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="o">+</span><span
class="cn">1</span><span
class="o">+</span><span
class="i">k</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'.'</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-10"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-11"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="o">+</span><span
class="i">k</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'x'</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-12"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="o">+</span><span
class="cn">1</span><span
class="o">+</span><span
class="i">k</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'#'</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-13"><span
class="h">&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-14"><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-15">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-16"><span
class="t">void</span><span
class="h"> </span><span
class="e">setMissingPeg</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="i">r</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">c</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-17"><span
class="h">&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">r</span><span
class="h"> </span><span
class="o">%</span><span
class="h"> </span><span
class="cn">2</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-18"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'.'</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-19"><span
class="h">&nbsp;&nbsp;</span><span
class="sy">}</span><span
class="h"> </span><span
class="st">else</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-20"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">r</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">c</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">'.'</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-21"><span
class="h">&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-22"><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-23">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-24"><span
class="t">double</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="cn">2000</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2000</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-25"><span
class="t">double</span><span
class="h"> </span><span
class="e">putBall</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="i">colK</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">targetCol</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-26"><span
class="h">&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="cn">2000</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">++</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-27"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="cn">2000</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="o">++</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-28"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0.0</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-29"><span
class="h">&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="cn">0</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">colK</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">1.0</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-30"><span
class="h">&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">1</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-31"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="cn">2</span><span
class="o">*</span><span
class="i">C</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-32"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="s">'.'</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-33"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="s">'x'</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-34"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">i</span><span
class="o">%</span><span
class="cn">2</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="cn">1</span><span
class="h"> </span><span
class="o">&amp;&amp;</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="cn">2</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-35"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-36"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">else</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-37"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="sy">.</span><span
class="cn">5</span><span
class="h"> </span><span
class="o">*</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-38"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-39"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="s">'x'</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-40"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">i</span><span
class="o">%</span><span
class="cn">2</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="cn">1</span><span
class="h"> </span><span
class="o">&amp;&amp;</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="cn">2</span><span
class="o">*</span><span
class="i">C</span><span
class="o">-</span><span
class="cn">4</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-41"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-42"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">else</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-43"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="sy">.</span><span
class="cn">5</span><span
class="h"> </span><span
class="o">*</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-44"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-45"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">pegs</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="s">'.'</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-46"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">i</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-47"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-48"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-49"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-50"><span
class="h">&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-51"><span
class="h">&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="v">ways</span><span
class="sy">[</span><span
class="i">R</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">]</span><span
class="sy">[</span><span
class="cn">1</span><span
class="o">+</span><span
class="cn">2</span><span
class="o">*</span><span
class="i">targetCol</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-52"><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-53">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-54"><span
class="t">int</span><span
class="h"> </span><span
class="e">main</span><span
class="sy">(</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-55"><span
class="h">&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="i">N</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">K</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">M</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">r</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">c</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-56"><span
class="h">&nbsp;&nbsp;</span><span
class="i">cin</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">N</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-57"><span
class="h">&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">N</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-58"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cin</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">R</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-59"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">initPegs</span><span
class="sy">(</span><span
class="i">R</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-60"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cin</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">K</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-61"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cin</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">M</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-62"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">M</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-63"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cin</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">r</span><span
class="h"> </span><span
class="o">&gt;&gt;</span><span
class="h"> </span><span
class="i">c</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-64"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">setMissingPeg</span><span
class="sy">(</span><span
class="i">r</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">c</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-65"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-66"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">maxCol</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-67"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">double</span><span
class="h"> </span><span
class="v">maxP</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0.0</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-68"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">C</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="o">++</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-69"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">double</span><span
class="h"> </span><span
class="v">p</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">putBall</span><span
class="sy">(</span><span
class="i">j</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">K</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">R</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">C</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-70"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">p</span><span
class="h"> </span><span
class="o">&gt;</span><span
class="h"> </span><span
class="i">maxP</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-71"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxP</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">p</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-72"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxCol</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">j</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-73"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-74"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-75"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">printf</span><span
class="sy">(</span><span
class="s">"%d %.6f\n"</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">maxCol</span><span
class="sy">,</span><span
class="h"> </span><span
class="i">maxP</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fcb00719f-76"><span
class="h">&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fcb00719f-77"><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/peg-game-problem-analysis.html#comments" title="Comment on Peg Game Problem Analysis">4 Comments &#187;</a></span></p></div></div><div
id="post-71" class="post-71 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/double-square-problem-analysis.html" rel="bookmark" title="Permanent Link to Double Square Problem Analysis">Double Square Problem Analysis</a></h2><p
class="date">January 10, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>A double-square number is an integer <b>X </b>which can be expressed as the sum of two perfect squares. For example, 10 is a double-square because 10 = 3<sup>2</sup> + 1<sup>2</sup>. Your task in this problem is, given X, determine the number of ways in which it can be written as the sum of two squares. <a
href="http://leetcode.com/2011/01/double-square-problem-analysis.html#more-71" class="more-link">Read the rest of this entry &rarr;</a></p></blockquote></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/double-square-problem-analysis.html#comments" title="Comment on Double Square Problem Analysis">27 Comments &#187;</a></span></p></div></div><div
id="post-70" class="post-70 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/facebook-hacker-cup.html" rel="bookmark" title="Permanent Link to Facebook Hacker Cup Online Qualification Round Begins Now!">Facebook Hacker Cup Online Qualification Round Begins Now!</a></h2><p
class="date">January 8, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>Facebook decided to launch <a
href="http://www.facebook.com/hackercup">Hacker Cup</a>, a programming contest to attract the world&#8217;s best talents to their HQ. The qualification round started on Friday 4pm (US&#8217;s PST timezone) and continues for 72 hours, so <a
href="http://www.facebook.com/hackercup">go ahead and join now</a>.</p></blockquote><p><div
class="separator" style="clear: both; text-align: center;"><a
href="http://3.bp.blogspot.com/_UElib2WLeDE/TSgq0nxMx3I/AAAAAAAACcI/hDq_N_sTlMY/s1600/hacker_cup_logo.jpg" style="margin-left: 1em; margin-right: 1em;"><img
border="0" height="300" src="http://3.bp.blogspot.com/_UElib2WLeDE/TSgq0nxMx3I/AAAAAAAACcI/hDq_N_sTlMY/s400/hacker_cup_logo.jpg" width="400" /></a></div><div
style="text-align: center;"><span
style="font-size: x-small;">Facebook&#8217;s Hacker Cup, equivalent to Google&#8217;s Code Jam. The cheapest way to attract the best talents from all over the world.</span></div><p>Just finished <a
href="http://www.facebook.com/hackercup/problems.php?round=4">Facebook Hacker Cup Online Qualification Round</a> and thought that I might share some of my thoughts about it.</p><p>Just like <a
href="http://code.google.com/codejam/">Google&#8217;s CodeJam</a>, this round consisted a total of three problems, and you would need to solve just one of the problem correctly to qualify for the next round.</p><p>I admit, I had a lot of fun in this round (which had a lot of hidden surprise in the problems), but the contest&#8217;s interface totally suck the hell out of a rhino&#8217;s @$$. And seemed like <a
href="http://www.quora.com/Andrew-Brown-2/Facebook-Hacker-Cup-Resounding-Failure">I am not the only one who agrees on this</a>.</p><p><b>The first glitch that really got on my nerves &#8211;</b><br
/>As you download the input file, the timer starts to countdown, without you knowing about it. Then, I found a little notice on the corner saying that you would have to refresh the browser after downloading the input file to see the timer. I don&#8217;t know why, but this seemed stupid and unacceptable to me.</p><div
class="separator" style="clear: both; text-align: center;"><a
href="http://4.bp.blogspot.com/_UElib2WLeDE/TSgpqW-oTEI/AAAAAAAACcA/5KU_r2PTkcc/s1600/notice.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img
border="0" src="http://4.bp.blogspot.com/_UElib2WLeDE/TSgpqW-oTEI/AAAAAAAACcA/5KU_r2PTkcc/s1600/notice.JPG" /></a></div><div
style="text-align: center;"><span
style="font-size: x-small;">I totally missed this notice box. Guess they don&#8217;t want many people to know that there is actually a little timer.</span></div><p>Second, when you want to submit the answer, it opens up a small text box (by small I mean something like 10&#215;100 pixels), and you are suppose to paste your program&#8217;s output to that little text box. What a FAIL &#8212; They could have done much better.</p><div
class="separator" style="clear: both; text-align: center;"><a
href="http://1.bp.blogspot.com/_UElib2WLeDE/TSgpEbcgtyI/AAAAAAAACb8/LAnXgkdsvIs/s1600/submit_textbox.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img
border="0" src="http://1.bp.blogspot.com/_UElib2WLeDE/TSgpEbcgtyI/AAAAAAAACb8/LAnXgkdsvIs/s1600/submit_textbox.JPG" /></a></div><div
style="text-align: center;"><span
style="font-size: x-small;">No kidding. This is the <i>original size</i> of the text box where you are suppose to paste your answer into.</span></div><p>Third, after you submitted the answer, there is a message box that mentioned that you would need to wait until the contest is over to find out if your answer is correct. Oh well&#8230; On the other hand, the timer just continue on ticking until it says &#8220;Time expired&#8221;. You get multiple chances to submit your answer, but ONLY within the limited time. I learned the hard way. My advice to you is test your code carefully for edge cases before downloading the input. During the limited time you won&#8217;t be able to do much about it if you find that your code has a bug.</p><div
class="separator" style="clear: both; text-align: center;"><a
href="http://3.bp.blogspot.com/_UElib2WLeDE/TSgqVDGUG8I/AAAAAAAACcE/bDebAd4I3fc/s1600/hacker_cup.JPG" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img
border="0" height="229" src="http://3.bp.blogspot.com/_UElib2WLeDE/TSgqVDGUG8I/AAAAAAAACcE/bDebAd4I3fc/s400/hacker_cup.JPG" width="400" /></a></div><div
style="text-align: center;"><span
style="font-size: x-small;"> Time expired&#8230; Grrr&#8230;</span></div><p>Anyway, enough ranting and let&#8217;s move on to the fun part, which are the problems itself.</p><p><u><b>Double Squares:</b></u><br
/>This is a really fun problem with a little surprise behind it. While you are reading the problem, you would notice a little subtitle under the main title &#8220;Facebook Hacker Cup&#8221; that says &#8220;<i>Too hard for brute force, switching to dp</i>&#8220;. It&#8217;s there for a purpose. <img
border="0" src="http://4.bp.blogspot.com/_UElib2WLeDE/TK7aJSBFXSI/AAAAAAAACW8/5f8CRD5dJ8o/s1600/smiley.jpg" style="padding: 0px;" /> I knew I did not get this correct because of their timer display requires a browser reload&#8230;</p><p><u><b>Peg Game:</b></u><br
/>You need to read this problem carefully. Don&#8217;t worry, you won&#8217;t need much from theory of probability. Reminds me of the binomial theorem. If there are no missing pegs, then the probability of each column could be calculated easily using binomial coefficients. This problem is pretty straight forward, but you need to be some what careful.</p><p><u><b>Studious Student:</b></u><br
/>This is a fun problem. It is easy to understand the problem statement and it is also easy to fall into a trap. This problem is not as straight forward as you think it might be.</p><p>I will post my analysis and solution after the contest is over. Till then have fun solving the problems!</p></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/facebook-hacker-cup.html#comments" title="Comment on Facebook Hacker Cup Online Qualification Round Begins Now!">35 Comments &#187;</a></span></p></div></div><div
id="post-69" class="post-69 post type-post status-publish format-standard hentry category-uncategorized"><div
class="author-box"> <img
src="http://leetcode.com/wp-content/uploads/avatars/8268/2ffa5b26dd039dec008aa06ddae07ec0-bpthumb.jpg" alt="Avatar of 1337c0d3r" class="avatar user-8268-avatar" width="50" height="50" /><p>by <a
href="http://leetcode.com/members/admin/" title="1337c0d3r">1337c0d3r</a></p></div><div
class="post-content"><h2 class="posttitle"><a
href="http://leetcode.com/2011/01/ctrla-ctrlc-ctrlv.html" rel="bookmark" title="Permanent Link to CTRL+A, CTRL+C, CTRL+V">CTRL+A, CTRL+C, CTRL+V</a></h2><p
class="date">January 4, 2011 <span>in <a
href="http://leetcode.com/category/uncategorized" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></span></p><div
class="entry"><blockquote><p>Imagine you have a special keyboard with the following keys:<ol><li>A</li><li>Ctrl+A</li><li>Ctrl+C</li><li>Ctrl+V</li></ol><p>where CTRL+A, CTRL+C, CTRL+V each acts as one function key for &#8220;Select All&#8221;, &#8220;Copy&#8221;, and &#8220;Paste&#8221; operations respectively.</p><p>If you can only press the keyboard for <i>N</i> times (with the above four keys), please write a program to produce maximum numbers of A. If possible, please also print out the sequence of keys. <a
href="http://leetcode.com/2011/01/ctrla-ctrlc-ctrlv.html#more-69" class="more-link">Read the rest of this entry &rarr;</a></p></blockquote></div><p
class="postmetadata"> <span
class="comments"><a
href="http://leetcode.com/2011/01/ctrla-ctrlc-ctrlv.html#comments" title="Comment on CTRL+A, CTRL+C, CTRL+V">56 Comments &#187;</a></span></p></div></div></div></div></div><div
id="post-dir-search" class="dir-search"><form
role="search" method="get" id="searchform" action="http://leetcode.com/"> <input
type="text" value="" name="s" id="s" /> <input
type="submit" id="searchsubmit" value="Search" /></form></div><div
id="sidebar"><div
class="padder"></div></div></div><div
id="push"></div></div><div
id="footer"><div
id="colophon"><div
class="footer-widget"></div><div
class="footer-widget"></div><div
class="footer-widget"></div><div
class="footer-widget last"></div><div
class="clear"></div><div
id="footer-links"><ul
class="footer-menu"><li
class="page_item page-item-2"><a
href="http://leetcode.com/about">About</a></li><li
class="page_item page-item-908"><a
href="http://leetcode.com/activity">Activity</a></li><li
class="page_item page-item-1466"><a
href="http://leetcode.com/discuss">Discuss</a></li><li
class="page_item page-item-1658"><a
href="http://leetcode.com/donate">Donate</a></li><li
class="page_item page-item-907"><a
href="http://leetcode.com/members">Members</a></li><li
class="page_item page-item-370"><a
href="http://leetcode.com/onlinejudge">Online Judge</a></li></ul></div><div
id="credits"><p>Copyright &copy; 2013 LeetCode &nbsp;&middot;&nbsp; <a
href="http://leetcode.com/wp-login.php">Log in</a></p></div></div></div><div
id="wpadminbar" class="nojq nojs" role="navigation"> <a
class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a><div
class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Top navigation toolbar." tabindex="0"><ul
id="wp-admin-bar-root-default" class="ab-top-menu"><li
id="wp-admin-bar-bp-login"><a
class="ab-item"  href="http://leetcode.com/wp-login.php">Log in</a></li><li
id="wp-admin-bar-bp-register"><a
class="ab-item"  href="http://leetcode.com/register/">Register</a></li><li
id="wp-admin-bar-my-account"><div
class="ab-item ab-empty-item" ></div></li></ul></div> <a
class="screen-reader-shortcut" href="http://leetcode.com/wp-login.php?action=logout&#038;_wpnonce=d79c4035be">Log Out</a></div><div
class="buddyboss_log"></div> <script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-6849839-3']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

  </script><style type="text/css">
    .defaultCommentText { color: #a1a1a1; font-style: italic; }
  </style><script type="text/javascript">
    jQuery("textarea#comment, textarea#reply_text").focus(function(srcc) {
      if (jQuery(this).val() == jQuery(this)[0].title) {
        jQuery(this).val("");
        jQuery(this).removeClass("defaultCommentText");
      }
    });
    jQuery("textarea#comment, textarea#reply_text").blur(function() {
      if (jQuery(this).val() == "") {
        jQuery(this).val(jQuery(this)[0].title);
        jQuery(this).addClass("defaultCommentText");
      }
    });
    jQuery("textarea#comment, textarea#reply_text").attr('title', 'To embed your code, please use <code>your code here</code>.');
    jQuery("textarea#comment, textarea#reply_text").blur();
  </script></body></html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk: basic
Page Caching using disk: enhanced

 Served from: leetcode.com @ 2013-12-07 20:59:28 by W3 Total Cache -->