<?xml version="1.0" encoding="UTF-8"?><rss
version="2.0"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:atom="http://www.w3.org/2005/Atom"
xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
> <channel><title>Comments for LeetCode</title> <atom:link href="http://leetcode.com/comments/feed" rel="self" type="application/rss+xml" /><link>http://leetcode.com</link> <description>Online Portal for IT Interview</description> <lastBuildDate>Sun, 08 Dec 2013 01:05:39 +0000</lastBuildDate> <sy:updatePeriod>hourly</sy:updatePeriod> <sy:updateFrequency>1</sy:updateFrequency> <generator>http://wordpress.org/?v=3.5.1</generator> <item><title>Comment on C code to remove spaces from a string by Xiaoguang Xu</title><link>http://leetcode.com/2010/02/c-code-to-remove-spaces-from-string.html#comment-92002</link> <dc:creator>Xiaoguang Xu</dc:creator> <pubDate>Sun, 08 Dec 2013 01:05:39 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=5#comment-92002</guid> <description><![CDATA[in that case, will you be able to give any solution?]]></description> <content:encoded><![CDATA[<p>in that case, will you be able to give any solution?</p> ]]></content:encoded> </item> <item><title>Comment on Multiplication of numbers by carl</title><link>http://leetcode.com/2010/04/multiplication-of-numbers.html#comment-91661</link> <dc:creator>carl</dc:creator> <pubDate>Sat, 07 Dec 2013 08:21:09 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=17#comment-91661</guid> <description><![CDATA[nice work! However, your solution is still o(n) space. You just save a copy of o(n) temp array by using the output array. How about just print the result without an output array?]]></description> <content:encoded><![CDATA[<p>nice work! However, your solution is still o(n) space. You just save a copy of o(n) temp array by using the output array. How about just print the result without an output array?</p> ]]></content:encoded> </item> <item><title>Comment on Longest Substring Without Repeating Characters by dennis</title><link>http://leetcode.com/2011/05/longest-substring-without-repeating-characters.html#comment-91224</link> <dc:creator>dennis</dc:creator> <pubDate>Fri, 06 Dec 2013 10:53:24 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=753#comment-91224</guid> <description><![CDATA[My idea is opposite to yours: the code is right, but the description is not precise. Below code means when we are sure all substring that start before or at index i would be less than our current maximum, we can safely move the start index i to the first appearance of character s[j] in face, by skipping all items between j and first j:
&lt;code&gt;
while (s[i] != s[j])
{
exist[ s[i] ] = false;
i++;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p>My idea is opposite to yours: the code is right, but the description is not precise. Below code means when we are sure all substring that start before or at index i would be less than our current maximum, we can safely move the start index i to the first appearance of character s[j] in face, by skipping all items between j and first j:</p><div
id="crayon-52a3fbdb4c414" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
while (s[i] != s[j]) 
{
exist[ s[i] ] = false; 
i++;
}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb4c414-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c414-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c414-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c414-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c414-5">5</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb4c414-1"><span
class="st">while</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">s</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">!=</span><span
class="h"> </span><span
class="v">s</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="sy">)</span><span
class="h"> </span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c414-2"><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c414-3"><span
class="v">exist</span><span
class="sy">[</span><span
class="h"> </span><span
class="v">s</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="h"> </span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">false</span><span
class="sy">;</span><span
class="h"> </span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c414-4"><span
class="i">i</span><span
class="o">++</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c414-5"><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Longest Substring Without Repeating Characters by dennis</title><link>http://leetcode.com/2011/05/longest-substring-without-repeating-characters.html#comment-91215</link> <dc:creator>dennis</dc:creator> <pubDate>Fri, 06 Dec 2013 10:02:48 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=753#comment-91215</guid> <description><![CDATA[Hi 1377coder,could you please explain the following code snippet:
&lt;code&gt;
exist[s[i]] = false;
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p>Hi 1377coder,</p><p>could you please explain the following code snippet:</p><div
id="crayon-52a3fbdb4c5d3" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
exist[s[i]] = false;</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb4c5d3-1">1</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb4c5d3-1"><span
class="v">exist</span><span
class="sy">[</span><span
class="v">s</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">false</span><span
class="sy">;</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Finding all unique triplets that sums to zero by Chun Zhang</title><link>http://leetcode.com/2010/04/finding-all-unique-triplets-that-sums.html#comment-91154</link> <dc:creator>Chun Zhang</dc:creator> <pubDate>Fri, 06 Dec 2013 05:45:26 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=12#comment-91154</guid> <description><![CDATA[this is absolutely one O(n^3) problem. Imagine all number is 0, there are choose (n,3) possibilities ...]]></description> <content:encoded><![CDATA[<p>this is absolutely one O(n^3) problem. Imagine all number is 0, there are choose (n,3) possibilities &#8230;</p> ]]></content:encoded> </item> <item><title>Comment on Find the k-th Smallest Element in the Union of Two Sorted Arrays by Ishtiaque</title><link>http://leetcode.com/2011/01/find-k-th-smallest-element-in-union-of.html#comment-91124</link> <dc:creator>Ishtiaque</dc:creator> <pubDate>Fri, 06 Dec 2013 03:50:29 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=76#comment-91124</guid> <description><![CDATA[&quot;We make an observation that when Ai &lt; Bj, then it must be true that Ai &lt; Bj-1. On the other hand, if Bj &lt; Ai, then Bj &lt; Ai-1. Why?&quot;Shouldn&#039;t it be &#039;&lt;=&#039; ?&quot;We make an observation that when Ai &lt;= Bj, then it must be true that Ai &lt; Bj-1. On the other hand, if Bj &lt; Ai, then Bj &lt;= Ai-1. Why?&quot;Thank you!]]></description> <content:encoded><![CDATA[<p>&#8220;We make an observation that when Ai &lt; Bj, then it must be true that Ai &lt; Bj-1. On the other hand, if Bj &lt; Ai, then Bj &lt; Ai-1. Why?&quot;</p><p>Shouldn&#039;t it be &#039;&lt;=&#039; ?</p><p>&quot;We make an observation that when Ai &lt;= Bj, then it must be true that Ai &lt; Bj-1. On the other hand, if Bj &lt; Ai, then Bj &lt;= Ai-1. Why?&quot;</p><p>Thank you!</p> ]]></content:encoded> </item> <item><title>Comment on Detecting a Loop in a Singly Linked List by Like Zhou</title><link>http://leetcode.com/2010/09/detecting-loop-in-singly-linked-list.html#comment-90856</link> <dc:creator>Like Zhou</dc:creator> <pubDate>Thu, 05 Dec 2013 12:58:22 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=34#comment-90856</guid> <description><![CDATA[O(n) and no extra space:
&lt;code&gt;
bool hasCycle(ListNode *head) {
while(head &amp;&amp;  head-&gt;next &amp;&amp; head-&gt;next-&gt;next){
if(head == head-&gt;next)
return true;
head-&gt;next-&gt;next = head-&gt;next-&gt;next-&gt;next;
head = head-&gt;next;
}
return false;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p>O(n) and no extra space:</p><div
id="crayon-52a3fbdb5e384" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
bool hasCycle(ListNode *head) {
        while(head &amp;&amp;  head-&gt;next &amp;&amp; head-&gt;next-&gt;next){
            if(head == head-&gt;next)
                return true;
            head-&gt;next-&gt;next = head-&gt;next-&gt;next-&gt;next;
            head = head-&gt;next;
        }
        return false;
    }</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb5e384-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5e384-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb5e384-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5e384-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb5e384-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5e384-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb5e384-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5e384-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb5e384-9">9</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb5e384-1"><span
class="t">bool</span><span
class="h"> </span><span
class="e">hasCycle</span><span
class="sy">(</span><span
class="e ">ListNode *</span><span
class="i">head</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5e384-2"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">while</span><span
class="sy">(</span><span
class="i">head</span><span
class="h"> </span><span
class="o">&amp;&amp;</span><span
class="h">&nbsp;&nbsp;</span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="h"> </span><span
class="o">&amp;&amp;</span><span
class="h"> </span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="sy">)</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb5e384-3"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="v">head</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5e384-4"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="t">true</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5e384-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="o">-&gt;</span><span
class="v">next</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5e384-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">head</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">head</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5e384-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5e384-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="t">false</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5e384-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Clone Graph Part I by 上品 クラッチバッグ 大人気</title><link>http://leetcode.com/2012/05/clone-graph-part-i.html#comment-90739</link> <dc:creator>上品 クラッチバッグ 大人気</dc:creator> <pubDate>Thu, 05 Dec 2013 05:30:05 +0000</pubDate> <guid
isPermaLink="false">http://www.leetcode.com/?p=1354#comment-90739</guid> <description><![CDATA[I am curious to find out what blog platform you have been
utilizing? I&#039;m experiencing some minor security problems with
my latest blog and I&#039;d like to find something more secure.
Do you have any recommendations?]]></description> <content:encoded><![CDATA[<p>I am curious to find out what blog platform you have been<br
/> utilizing? I&#8217;m experiencing some minor security problems with<br
/> my latest blog and I&#8217;d like to find something more secure.<br
/> Do you have any recommendations?</p> ]]></content:encoded> </item> <item><title>Comment on Finding prime numbers by Mingliang LIU</title><link>http://leetcode.com/2010/04/finding-prime-numbers.html#comment-89663</link> <dc:creator>Mingliang LIU</dc:creator> <pubDate>Mon, 02 Dec 2013 14:20:53 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=20#comment-89663</guid> <description><![CDATA[&lt;code&gt;
void prime_sieve2(int n, bool prime[]) {
prime[0] = prime[1] = false;
prime[2] = true;
for (int i = 3; i &lt;= n; i++)
prime[i] = (i % 2);
int limit = sqrt(n);
for (int i = 3; i &lt;= limit; i += 2)
if (prime[i])
for (int j = i * i; j &lt;= n; j += i)
prime[j] = false;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p></p><div
id="crayon-52a3fbdb5ed54" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
void prime_sieve2(int n, bool prime[]) {
    prime[0] = prime[1] = false;
    prime[2] = true;
    for (int i = 3; i &lt;= n; i++)
        prime[i] = (i % 2);
    
    int limit = sqrt(n);
    for (int i = 3; i &lt;= limit; i += 2)
        if (prime[i])
            for (int j = i * i; j &lt;= n; j += i)
                prime[j] = false;
}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-10">10</div><div
class="crayon-num" data-line="crayon-52a3fbdb5ed54-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5ed54-12">12</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb5ed54-1"><span
class="t">void</span><span
class="h"> </span><span
class="e">prime_sieve2</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="i">n</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">bool</span><span
class="h"> </span><span
class="v">prime</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-2"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prime</span><span
class="sy">[</span><span
class="cn">0</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">prime</span><span
class="sy">[</span><span
class="cn">1</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">false</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5ed54-3"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prime</span><span
class="sy">[</span><span
class="cn">2</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">true</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-4"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">3</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">&lt;=</span><span
class="h"> </span><span
class="i">n</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">++</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb5ed54-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prime</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">i</span><span
class="h"> </span><span
class="o">%</span><span
class="h"> </span><span
class="cn">2</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5ed54-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">limit</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">sqrt</span><span
class="sy">(</span><span
class="i">n</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">3</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">&lt;=</span><span
class="h"> </span><span
class="i">limit</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="cn">2</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb5ed54-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="v">prime</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-10"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="h"> </span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">j</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e ">i *</span><span
class="h"> </span><span
class="i">i</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">&lt;=</span><span
class="h"> </span><span
class="i">n</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">j</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="i">i</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb5ed54-11"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prime</span><span
class="sy">[</span><span
class="i">j</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">false</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5ed54-12"><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Reverse Bits by duter</title><link>http://leetcode.com/2011/08/reverse-bits.html#comment-89647</link> <dc:creator>duter</dc:creator> <pubDate>Mon, 02 Dec 2013 13:11:35 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=813#comment-89647</guid> <description><![CDATA[good job~~~]]></description> <content:encoded><![CDATA[<p>good job~~~</p> ]]></content:encoded> </item> <item><title>Comment on A binary tree problem &#8211; Populating next right pointers in each node by Mingliang LIU</title><link>http://leetcode.com/2010/03/first-on-site-technical-interview.html#comment-89589</link> <dc:creator>Mingliang LIU</dc:creator> <pubDate>Mon, 02 Dec 2013 10:13:00 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=8#comment-89589</guid> <description><![CDATA[&lt;code&gt;
/**
* Definition for binary tree with next pointer.
* struct TreeLinkNode {
*  int val;
*  TreeLinkNode *left, *right, *next;
*  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
* };
*/
class Solution {
public:
void connect(TreeLinkNode *root) {
TreeLinkNode *n = root;
while (n) {
TreeLinkNode *prev = NULL, *next = NULL;
while (n) {
if (!next)
next = n-&gt;left ? n-&gt;left : n-&gt;right;
if (n-&gt;left) {
if (prev)
prev-&gt;next = n-&gt;left;
prev = n-&gt;left;
}
if (n-&gt;right) {
if (prev)
prev-&gt;next = n-&gt;right;
prev = n-&gt;right;
}
n = n-&gt;next;
}
n = next;
}
}
};
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p></p><div
id="crayon-52a3fbdb63227" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        TreeLinkNode *n = root;
        while (n) {
            TreeLinkNode *prev = NULL, *next = NULL;
            while (n) {
                if (!next)
                    next = n-&gt;left ? n-&gt;left : n-&gt;right;
                if (n-&gt;left) {
                    if (prev)
                        prev-&gt;next = n-&gt;left;
                    prev = n-&gt;left;
                }
                if (n-&gt;right) {
                    if (prev)
                        prev-&gt;next = n-&gt;right;
                    prev = n-&gt;right;
                }
                n = n-&gt;next;
            }
            n = next;
        }
    }
};</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb63227-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-10">10</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-12">12</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-13">13</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-14">14</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-15">15</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-16">16</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-17">17</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-18">18</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-19">19</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-20">20</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-21">21</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-22">22</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-23">23</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-24">24</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-25">25</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-26">26</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-27">27</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-28">28</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-29">29</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-30">30</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-31">31</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb63227-32">32</div><div
class="crayon-num" data-line="crayon-52a3fbdb63227-33">33</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb63227-1"><span
class="c">/**</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-2"><span
class="c"> * Definition for binary tree with next pointer.</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-3"><span
class="c"> * struct TreeLinkNode {</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-4"><span
class="c"> *&nbsp;&nbsp;int val;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-5"><span
class="c"> *&nbsp;&nbsp;TreeLinkNode *left, *right, *next;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-6"><span
class="c"> *&nbsp;&nbsp;TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-7"><span
class="c"> * };</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-8"><span
class="c"> */</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-9"><span
class="t">class</span><span
class="h"> </span><span
class="e">Solution</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-10"><span
class="m">public</span><span
class="o">:</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-11"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">void</span><span
class="h"> </span><span
class="e">connect</span><span
class="sy">(</span><span
class="e ">TreeLinkNode *</span><span
class="i">root</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-12"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e ">TreeLinkNode *</span><span
class="v">n</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">root</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-13"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">while</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">n</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-14"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e ">TreeLinkNode *</span><span
class="v">prev</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">NULL</span><span
class="sy">,</span><span
class="h"> </span><span
class="o">*</span><span
class="v">next</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">NULL</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-15"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">while</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">n</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-16"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="o">!</span><span
class="i">next</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-17"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">next</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="h"> </span><span
class="sy">?</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="h"> </span><span
class="o">:</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">right</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-18"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-19"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">prev</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-20"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">prev</span><span
class="o">-&gt;</span><span
class="v">next</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-21"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prev</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-22"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-23"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">right</span><span
class="sy">)</span><span
class="h"> </span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-24"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="h"> </span><span
class="sy">(</span><span
class="i">prev</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-25"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">prev</span><span
class="o">-&gt;</span><span
class="v">next</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">right</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-26"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">prev</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">right</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-27"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-28"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">n</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">n</span><span
class="o">-&gt;</span><span
class="i">next</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-29"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-30"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">n</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">next</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-31"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb63227-32"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb63227-33"><span
class="sy">}</span><span
class="sy">;</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on CTRL+A, CTRL+C, CTRL+V by jiangok</title><link>http://leetcode.com/2011/01/ctrla-ctrlc-ctrlv.html#comment-89501</link> <dc:creator>jiangok</dc:creator> <pubDate>Mon, 02 Dec 2013 05:13:04 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=69#comment-89501</guid> <description><![CDATA[Below is the recursive algo for simplicity.int f(int n)
{
return re(n, 0, 0);
}// n1: the strokes left
// cCopied: copied As
// c: the count of As already generated
int re(int n1, int cCopied, int c)
{
if(n1==0)
{
return c;
}int t1 = re(n1-1, cCopied, c+1); // if the next stroke is A
int t2 = re(n1-1, cCopied, c+cCopied); // if the next stroke is ctrl-v
int t3 = INT_MIN;if(n1&gt;3) // if the next strokes are ctrl-a, ctrl-c, ctrl-v, ctrl-v
{
t3 = re(n1-4, c, 2c);
}return max(t1, t2, t3);
}]]></description> <content:encoded><![CDATA[<p>Below is the recursive algo for simplicity.</p><p>int f(int n)<br
/> {<br
/> return re(n, 0, 0);<br
/> }</p><p>// n1: the strokes left<br
/> // cCopied: copied As<br
/> // c: the count of As already generated<br
/> int re(int n1, int cCopied, int c)<br
/> {<br
/> if(n1==0)<br
/> {<br
/> return c;<br
/> }</p><p> int t1 = re(n1-1, cCopied, c+1); // if the next stroke is A<br
/> int t2 = re(n1-1, cCopied, c+cCopied); // if the next stroke is ctrl-v<br
/> int t3 = INT_MIN;</p><p> if(n1&gt;3) // if the next strokes are ctrl-a, ctrl-c, ctrl-v, ctrl-v<br
/> {<br
/> t3 = re(n1-4, c, 2c);<br
/> }</p><p> return max(t1, t2, t3);<br
/> }</p> ]]></content:encoded> </item> <item><title>Comment on Searching a 2D Sorted Matrix Part II by awashburn</title><link>http://leetcode.com/2010/10/searching-2d-sorted-matrix-part-ii.html#comment-89422</link> <dc:creator>awashburn</dc:creator> <pubDate>Sun, 01 Dec 2013 22:46:28 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=47#comment-89422</guid> <description><![CDATA[Even if the diagonal was also guarenteed to be sorted this aproach would not work.Consider the counter example, searching for 10:&lt;code&gt;
1  4  7 11 15
2  5  8 12 19
3  6  9 16 22
4 12 14 17 24
10 21 23 26 30
&lt;/code&gt;You would search the row and column containg 17 and not find 10, yet 10 exists in the matrix]]></description> <content:encoded><![CDATA[<p>Even if the diagonal was also guarenteed to be sorted this aproach would not work.</p><p>Consider the counter example, searching for 10:</p><p></p><div
id="crayon-52a3fbdb5d160" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
 1  4  7 11 15
 2  5  8 12 19
 3  6  9 16 22
 4 12 14 17 24
10 21 23 26 30</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb5d160-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5d160-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb5d160-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5d160-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb5d160-5">5</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb5d160-1"><span
class="h"> </span><span
class="cn">1</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">4</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">7</span><span
class="h"> </span><span
class="cn">11</span><span
class="h"> </span><span
class="cn">15</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5d160-2"><span
class="h"> </span><span
class="cn">2</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">5</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">8</span><span
class="h"> </span><span
class="cn">12</span><span
class="h"> </span><span
class="cn">19</span></div><div
class="crayon-line" id="crayon-52a3fbdb5d160-3"><span
class="h"> </span><span
class="cn">3</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">6</span><span
class="h">&nbsp;&nbsp;</span><span
class="cn">9</span><span
class="h"> </span><span
class="cn">16</span><span
class="h"> </span><span
class="cn">22</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5d160-4"><span
class="h"> </span><span
class="cn">4</span><span
class="h"> </span><span
class="cn">12</span><span
class="h"> </span><span
class="cn">14</span><span
class="h"> </span><span
class="cn">17</span><span
class="h"> </span><span
class="cn">24</span></div><div
class="crayon-line" id="crayon-52a3fbdb5d160-5"><span
class="cn">10</span><span
class="h"> </span><span
class="cn">21</span><span
class="h"> </span><span
class="cn">23</span><span
class="h"> </span><span
class="cn">26</span><span
class="h"> </span><span
class="cn">30</span></div></div></td></tr></table></div></div><p></p><p>You would search the row and column containg 17 and not find 10, yet 10 exists in the matrix</p> ]]></content:encoded> </item> <item><title>Comment on Convert Sorted List to Balanced Binary Search Tree (BST) by someone</title><link>http://leetcode.com/2010/11/convert-sorted-list-to-balanced-binary.html#comment-88998</link> <dc:creator>someone</dc:creator> <pubDate>Sat, 30 Nov 2013 20:33:21 +0000</pubDate> <guid
isPermaLink="false">http://ihas1337code.org/?p=62#comment-88998</guid> <description><![CDATA[Because the variable is passed as a reference, the multiple increments that sheen was expecting actually do happen in the recursion.]]></description> <content:encoded><![CDATA[<p>Because the variable is passed as a reference, the multiple increments that sheen was expecting actually do happen in the recursion.</p> ]]></content:encoded> </item> <item><title>Comment on Longest Palindromic Substring Part II by Mark</title><link>http://leetcode.com/2011/11/longest-palindromic-substring-part-ii.html#comment-88944</link> <dc:creator>Mark</dc:creator> <pubDate>Sat, 30 Nov 2013 17:23:58 +0000</pubDate> <guid
isPermaLink="false">http://www.leetcode.com/?p=993#comment-88944</guid> <description><![CDATA[A misleading post.]]></description> <content:encoded><![CDATA[<p>A misleading post.</p> ]]></content:encoded> </item> <item><title>Comment on A Distance Maximizing Problem by Mukit</title><link>http://leetcode.com/2011/05/a-distance-maximizing-problem.html#comment-87838</link> <dc:creator>Mukit</dc:creator> <pubDate>Thu, 28 Nov 2013 19:11:07 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=765#comment-87838</guid> <description><![CDATA[Really nice explanation. Specially proving that is will bound within O(n) is really cool !]]></description> <content:encoded><![CDATA[<p>Really nice explanation. Specially proving that is will bound within O(n) is really cool !</p> ]]></content:encoded> </item> <item><title>Comment on Construct Binary Tree From Inorder and Preorder/Postorder Traversal by Jim Liu</title><link>http://leetcode.com/2011/04/construct-binary-tree-from-inorder-and-preorder-postorder-traversal.html#comment-87510</link> <dc:creator>Jim Liu</dc:creator> <pubDate>Thu, 28 Nov 2013 07:20:27 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=612#comment-87510</guid> <description><![CDATA[&lt;code&gt;
const int MAX = 256;
int mapIndex[MAX];
void mapToIndices(int inorder[], int n)
{
for(int i=0; i&lt;n; i++)
{
assert(0 &lt;= inorder[i] &amp;&amp; inorder[i] &lt; MAX);
mapIndex[inorder[i]] = i;
}
}template
TreeNode* buildTree(ItemType in[], ItemType pre[], int inStart, int inEnd)
{
static int preIndex = 0;
if(inStart &gt; inEnd) return NULL;ItemType root_value = pre[preIndex++];TreeNode* root = new TreeNode;
root-&gt;info = root_value;if(inStart == inEnd)
{
root-&gt;left = NULL;
root-&gt;right = NULL;
return root;
}int root_idx = mapIndex[root_value];
root-&gt;left = buildTree(in,pre,inStart,root_idx-1);
root-&gt;right = buildTree(in,pre,root_idx+1,inEnd);return root;
}template
void print_TreeNode_inorder(TreeNode* root)
{
if(!root) return;print_TreeNode_inorder(root-&gt;left);
cout &lt;info &lt;right);
}void main()
{
int preorder[] = {7,10,4,3,1,2,8,11};
int inorder[] = {4,10,3,1,7,11,8,2};
int len = sizeof(preorder)/sizeof(preorder[0]);
mapToIndices(inorder,len);
TreeNode* tree = buildTree(inorder,preorder,0,len-1);
print_TreeNode_inorder(tree);
cout &lt;&lt; endl;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p></p><div
id="crayon-52a3fbdb5050c" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
const int MAX = 256;
int mapIndex[MAX];
void mapToIndices(int inorder[], int n)
{
	for(int i=0; i&lt;n; i++)
	{
		assert(0 &lt;= inorder[i] &amp;&amp; inorder[i] &lt; MAX);
		mapIndex[inorder[i]] = i;
	}
}

template 
TreeNode* buildTree(ItemType in[], ItemType pre[], int inStart, int inEnd)
{
	static int preIndex = 0;
	if(inStart &gt; inEnd) return NULL;

	ItemType root_value = pre[preIndex++];

	TreeNode* root = new TreeNode;
	root-&gt;info = root_value;

	if(inStart == inEnd) 
	{
		root-&gt;left = NULL;
		root-&gt;right = NULL;
		return root;
	}

	int root_idx = mapIndex[root_value];
	root-&gt;left = buildTree(in,pre,inStart,root_idx-1);
	root-&gt;right = buildTree(in,pre,root_idx+1,inEnd);

	return root;
}

template 
void print_TreeNode_inorder(TreeNode* root)
{
	if(!root) return;	

	print_TreeNode_inorder(root-&gt;left);
	cout &lt;info &lt;right);
}

void main()
{
        int preorder[] = {7,10,4,3,1,2,8,11};
	int inorder[] = {4,10,3,1,7,11,8,2};
	int len = sizeof(preorder)/sizeof(preorder[0]);
	mapToIndices(inorder,len);
	TreeNode* tree = buildTree(inorder,preorder,0,len-1);
	print_TreeNode_inorder(tree);
	cout &lt;&lt; endl;
}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-10">10</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-12">12</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-13">13</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-14">14</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-15">15</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-16">16</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-17">17</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-18">18</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-19">19</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-20">20</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-21">21</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-22">22</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-23">23</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-24">24</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-25">25</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-26">26</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-27">27</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-28">28</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-29">29</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-30">30</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-31">31</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-32">32</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-33">33</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-34">34</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-35">35</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-36">36</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-37">37</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-38">38</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-39">39</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-40">40</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-41">41</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-42">42</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-43">43</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-44">44</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-45">45</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-46">46</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-47">47</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-48">48</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-49">49</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-50">50</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-51">51</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-52">52</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-53">53</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb5050c-54">54</div><div
class="crayon-num" data-line="crayon-52a3fbdb5050c-55">55</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb5050c-1"><span
class="m">const</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="v">MAX</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">256</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-2"><span
class="t">int</span><span
class="h"> </span><span
class="v">mapIndex</span><span
class="sy">[</span><span
class="i">MAX</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-3"><span
class="t">void</span><span
class="h"> </span><span
class="e">mapToIndices</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">inorder</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">n</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-4"><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="sy">(</span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="o">=</span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">&lt;</span><span
class="i">n</span><span
class="sy">;</span><span
class="h"> </span><span
class="i">i</span><span
class="o">++</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">assert</span><span
class="sy">(</span><span
class="cn">0</span><span
class="h"> </span><span
class="o">&lt;=</span><span
class="h"> </span><span
class="v">inorder</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">&amp;&amp;</span><span
class="h"> </span><span
class="v">inorder</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="i">MAX</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">mapIndex</span><span
class="sy">[</span><span
class="v">inorder</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">i</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-10"><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-11">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-12"><span
class="e">template </span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-13"><span
class="e ">TreeNode*</span><span
class="h"> </span><span
class="e">buildTree</span><span
class="sy">(</span><span
class="e">ItemType </span><span
class="st">in</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">,</span><span
class="h"> </span><span
class="e">ItemType </span><span
class="v">pre</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">inStart</span><span
class="sy">,</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="i">inEnd</span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-14"><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-15"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="m">static</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="v">preIndex</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-16"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="i">inStart</span><span
class="h"> </span><span
class="o">&gt;</span><span
class="h"> </span><span
class="i">inEnd</span><span
class="sy">)</span><span
class="h"> </span><span
class="st">return</span><span
class="h"> </span><span
class="t">NULL</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-17">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-18"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">ItemType </span><span
class="v">root_value</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">pre</span><span
class="sy">[</span><span
class="i">preIndex</span><span
class="o">++</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-19">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-20"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e ">TreeNode*</span><span
class="h"> </span><span
class="v">root</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="i">TreeNode</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-21"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="v">info</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">root_value</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-22">&nbsp;</div><div
class="crayon-line" id="crayon-52a3fbdb5050c-23"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="v">inStart</span><span
class="h"> </span><span
class="o">==</span><span
class="h"> </span><span
class="i">inEnd</span><span
class="sy">)</span><span
class="h"> </span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-24"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-25"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="v">left</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">NULL</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-26"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="v">right</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="t">NULL</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-27"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="i">root</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-28"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-29">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-30"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">root_idx</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">mapIndex</span><span
class="sy">[</span><span
class="i">root_value</span><span
class="sy">]</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-31"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="v">left</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">buildTree</span><span
class="sy">(</span><span
class="st">in</span><span
class="sy">,</span><span
class="i">pre</span><span
class="sy">,</span><span
class="i">inStart</span><span
class="sy">,</span><span
class="i">root_idx</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-32"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="v">right</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">buildTree</span><span
class="sy">(</span><span
class="st">in</span><span
class="sy">,</span><span
class="i">pre</span><span
class="sy">,</span><span
class="i">root_idx</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">,</span><span
class="i">inEnd</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-33">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-34"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="i">root</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-35"><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-36">&nbsp;</div><div
class="crayon-line" id="crayon-52a3fbdb5050c-37"><span
class="e">template </span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-38"><span
class="t">void</span><span
class="h"> </span><span
class="e">print_TreeNode_inorder</span><span
class="sy">(</span><span
class="e ">TreeNode*</span><span
class="h"> </span><span
class="i">root</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-39"><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-40"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="o">!</span><span
class="i">root</span><span
class="sy">)</span><span
class="h"> </span><span
class="st">return</span><span
class="sy">;</span><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-41">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-42"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">print_TreeNode_inorder</span><span
class="sy">(</span><span
class="i">root</span><span
class="o">-&gt;</span><span
class="i">left</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-43"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cout</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="i">info</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="i">right</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-44"><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-45">&nbsp;</div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-46"><span
class="t">void</span><span
class="h"> </span><span
class="e">main</span><span
class="sy">(</span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-47"><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-48"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">preorder</span><span
class="sy">[</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="sy">{</span><span
class="cn">7</span><span
class="sy">,</span><span
class="cn">10</span><span
class="sy">,</span><span
class="cn">4</span><span
class="sy">,</span><span
class="cn">3</span><span
class="sy">,</span><span
class="cn">1</span><span
class="sy">,</span><span
class="cn">2</span><span
class="sy">,</span><span
class="cn">8</span><span
class="sy">,</span><span
class="cn">11</span><span
class="sy">}</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-49"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">inorder</span><span
class="sy">[</span><span
class="sy">]</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="sy">{</span><span
class="cn">4</span><span
class="sy">,</span><span
class="cn">10</span><span
class="sy">,</span><span
class="cn">3</span><span
class="sy">,</span><span
class="cn">1</span><span
class="sy">,</span><span
class="cn">7</span><span
class="sy">,</span><span
class="cn">11</span><span
class="sy">,</span><span
class="cn">8</span><span
class="sy">,</span><span
class="cn">2</span><span
class="sy">}</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-50"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">len</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">sizeof</span><span
class="sy">(</span><span
class="i">preorder</span><span
class="sy">)</span><span
class="o">/</span><span
class="e">sizeof</span><span
class="sy">(</span><span
class="v">preorder</span><span
class="sy">[</span><span
class="cn">0</span><span
class="sy">]</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-51"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">mapToIndices</span><span
class="sy">(</span><span
class="i">inorder</span><span
class="sy">,</span><span
class="i">len</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-52"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e ">TreeNode*</span><span
class="h"> </span><span
class="v">tree</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="e">buildTree</span><span
class="sy">(</span><span
class="i">inorder</span><span
class="sy">,</span><span
class="i">preorder</span><span
class="sy">,</span><span
class="cn">0</span><span
class="sy">,</span><span
class="i">len</span><span
class="o">-</span><span
class="cn">1</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-53"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">print_TreeNode_inorder</span><span
class="sy">(</span><span
class="i">tree</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb5050c-54"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">cout</span><span
class="h"> </span><span
class="o">&lt;&lt;</span><span
class="h"> </span><span
class="i">endl</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb5050c-55"><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Longest Substring Without Repeating Characters by Sachin</title><link>http://leetcode.com/2011/05/longest-substring-without-repeating-characters.html#comment-87297</link> <dc:creator>Sachin</dc:creator> <pubDate>Wed, 27 Nov 2013 19:22:37 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=753#comment-87297</guid> <description><![CDATA[I don&#039;t know why the &lt;code&gt;&lt;/code&gt; doesn&#039;t work properly...some of the code is missing above..but I think you guys got the logic...]]></description> <content:encoded><![CDATA[<p>I don&#8217;t know why the</p><div
id="crayon-52a3fbdb4c785" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb4c785-1">1</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb4c785-1">&nbsp;</div></div></td></tr></table></div></div><p> doesn&#8217;t work properly&#8230;some of the code is missing above..but I think you guys got the logic&#8230;</p> ]]></content:encoded> </item> <item><title>Comment on Longest Substring Without Repeating Characters by Sachin</title><link>http://leetcode.com/2011/05/longest-substring-without-repeating-characters.html#comment-87296</link> <dc:creator>Sachin</dc:creator> <pubDate>Wed, 27 Nov 2013 19:21:59 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=753#comment-87296</guid> <description><![CDATA[Here is the code for getting all possible longest continuous substrings in Java !:
&lt;code&gt;
public static List getMaxSubStrings( String input )
{
char[] c = input.toCharArray();
List maxList = new ArrayList();
int maxLength = 0;
String maxString = &quot;&quot;;
for( int i = 0; i = maxLength )
{
if( maxString.length() &gt; maxLength )
{
maxList.clear();
}
maxLength = maxString.length();
maxList.add( maxString );
}
if( repeatIndex + 1 &lt; c.length-1 )
{
maxString = maxString.substring(repeatIndex+1, maxString.length());
maxString += new String( new char[]{c[i]} );
}
}
}
return maxList;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p>Here is the code for getting all possible longest continuous substrings in Java !:</p><div
id="crayon-52a3fbdb4c892" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
public static List getMaxSubStrings( String input )
{
	char[] c = input.toCharArray();
	List maxList = new ArrayList();
	int maxLength = 0;
	String maxString = "";
	for( int i = 0; i = maxLength )
			{
				if( maxString.length() &gt; maxLength )
				{
					maxList.clear();
				}
				maxLength = maxString.length();
				maxList.add( maxString );
			}
	
				
			if( repeatIndex + 1 &lt; c.length-1 )
			{
				maxString = maxString.substring(repeatIndex+1, maxString.length());
				maxString += new String( new char[]{c[i]} );
			}
				
		}
			
	}
		
	return maxList;
}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-10">10</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-12">12</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-13">13</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-14">14</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-15">15</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-16">16</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-17">17</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-18">18</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-19">19</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-20">20</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-21">21</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-22">22</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-23">23</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-24">24</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-25">25</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-26">26</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-27">27</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4c892-28">28</div><div
class="crayon-num" data-line="crayon-52a3fbdb4c892-29">29</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb4c892-1"><span
class="m">public</span><span
class="h"> </span><span
class="m">static</span><span
class="h"> </span><span
class="e">List </span><span
class="e">getMaxSubStrings</span><span
class="sy">(</span><span
class="h"> </span><span
class="t">String</span><span
class="h"> </span><span
class="i">input</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-2"><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-3"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">char</span><span
class="sy">[</span><span
class="sy">]</span><span
class="h"> </span><span
class="v">c</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">input</span><span
class="sy">.</span><span
class="e">toCharArray</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-4"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">List </span><span
class="v">maxList</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="e">ArrayList</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">maxLength</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">String</span><span
class="h"> </span><span
class="v">maxString</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">""</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="sy">(</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">maxLength</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="h"> </span><span
class="o">&gt;</span><span
class="h"> </span><span
class="i">maxLength</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-10"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-11"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxList</span><span
class="sy">.</span><span
class="e">clear</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-12"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-13"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxLength</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-14"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxList</span><span
class="sy">.</span><span
class="e">add</span><span
class="sy">(</span><span
class="h"> </span><span
class="i">maxString</span><span
class="h"> </span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-15"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-16"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-17"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-18"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="h"> </span><span
class="i">repeatIndex</span><span
class="h"> </span><span
class="o">+</span><span
class="h"> </span><span
class="cn">1</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="v">c</span><span
class="sy">.</span><span
class="i">length</span><span
class="o">-</span><span
class="cn">1</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-19"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-20"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxString</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">substring</span><span
class="sy">(</span><span
class="i">repeatIndex</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">,</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-21"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">maxString</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="t">String</span><span
class="sy">(</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="t">char</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">{</span><span
class="v">c</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">}</span><span
class="h"> </span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-22"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-23"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-24"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-25"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-26"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-27"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4c892-28"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="i">maxList</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4c892-29"><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> <item><title>Comment on Longest Substring Without Repeating Characters by Sachin</title><link>http://leetcode.com/2011/05/longest-substring-without-repeating-characters.html#comment-87292</link> <dc:creator>Sachin</dc:creator> <pubDate>Wed, 27 Nov 2013 19:18:27 +0000</pubDate> <guid
isPermaLink="false">http://www.ihas1337code.com/?p=753#comment-87292</guid> <description><![CDATA[Here is my code ( a single for loop - that prints all possible continuous substrings of no repeating characters ) in Java !
&lt;code&gt;
public static List getMaxSubStrings( String input )
{
char[] c = input.toCharArray();
List maxList = new ArrayList();
int maxLength = 0;
String maxString = &quot;&quot;;
for( int i = 0; i = maxLength )
{
if( maxString.length() &gt; maxLength )
{
maxList.clear();
}
maxLength = maxString.length();
maxList.add( maxString );
}
if( repeatIndex + 1 &lt; c.length-1 )
{
maxString = maxString.substring(repeatIndex+1, maxString.length());
maxString += new String( new char[]{c[i]} );
}
}
}
return maxList;
}
&lt;/code&gt;]]></description> <content:encoded><![CDATA[<p>Here is my code ( a single for loop &#8211; that prints all possible continuous substrings of no repeating characters ) in Java !</p><div
id="crayon-52a3fbdb4ca4b" class="crayon-syntax crayon-theme-github crayon-font-consolas crayon-os-pc print-yes" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; float: none; clear: both; font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-plain-wrap"><textarea wrap="off" class="crayon-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 13px !important; line-height: 16px !important;">
public static List getMaxSubStrings( String input )
	{
		char[] c = input.toCharArray();
		List maxList = new ArrayList();
		int maxLength = 0;
		String maxString = "";
		for( int i = 0; i = maxLength )
				{
					if( maxString.length() &gt; maxLength )
					{
						maxList.clear();
					}
					maxLength = maxString.length();
					maxList.add( maxString );
				}
				
				
				if( repeatIndex + 1 &lt; c.length-1 )
				{
					maxString = maxString.substring(repeatIndex+1, maxString.length());
					maxString += new String( new char[]{c[i]} );
				}
				
			}
			
		}
		
		return maxList;
	}</textarea></div><div
class="crayon-main" style=""><table
class="crayon-table"><tr
class="crayon-row"><td
class="crayon-nums " data-settings="hide"><div
class="crayon-nums-content" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-1">1</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-2">2</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-3">3</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-4">4</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-5">5</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-6">6</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-7">7</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-8">8</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-9">9</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-10">10</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-11">11</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-12">12</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-13">13</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-14">14</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-15">15</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-16">16</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-17">17</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-18">18</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-19">19</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-20">20</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-21">21</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-22">22</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-23">23</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-24">24</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-25">25</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-26">26</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-27">27</div><div
class="crayon-num crayon-striped-num" data-line="crayon-52a3fbdb4ca4b-28">28</div><div
class="crayon-num" data-line="crayon-52a3fbdb4ca4b-29">29</div></div></td><td
class="crayon-code"><div
class="crayon-pre" style="font-size: 13px !important; line-height: 16px !important;"><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-1"><span
class="m">public</span><span
class="h"> </span><span
class="m">static</span><span
class="h"> </span><span
class="e">List </span><span
class="e">getMaxSubStrings</span><span
class="sy">(</span><span
class="h"> </span><span
class="t">String</span><span
class="h"> </span><span
class="i">input</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-2"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-3"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">char</span><span
class="sy">[</span><span
class="sy">]</span><span
class="h"> </span><span
class="v">c</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">input</span><span
class="sy">.</span><span
class="e">toCharArray</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-4"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="e">List </span><span
class="v">maxList</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="e">ArrayList</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-5"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">int</span><span
class="h"> </span><span
class="v">maxLength</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-6"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="t">String</span><span
class="h"> </span><span
class="v">maxString</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="s">""</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-7"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">for</span><span
class="sy">(</span><span
class="h"> </span><span
class="t">int</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="cn">0</span><span
class="sy">;</span><span
class="h"> </span><span
class="v">i</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="i">maxLength</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-8"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-9"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="h"> </span><span
class="o">&gt;</span><span
class="h"> </span><span
class="i">maxLength</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-10"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-11"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxList</span><span
class="sy">.</span><span
class="e">clear</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-12"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-13"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxLength</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-14"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxList</span><span
class="sy">.</span><span
class="e">add</span><span
class="sy">(</span><span
class="h"> </span><span
class="i">maxString</span><span
class="h"> </span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-15"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-16"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-17"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-18"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">if</span><span
class="sy">(</span><span
class="h"> </span><span
class="i">repeatIndex</span><span
class="h"> </span><span
class="o">+</span><span
class="h"> </span><span
class="cn">1</span><span
class="h"> </span><span
class="o">&lt;</span><span
class="h"> </span><span
class="v">c</span><span
class="sy">.</span><span
class="i">length</span><span
class="o">-</span><span
class="cn">1</span><span
class="h"> </span><span
class="sy">)</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-19"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">{</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-20"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="v">maxString</span><span
class="h"> </span><span
class="o">=</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">substring</span><span
class="sy">(</span><span
class="i">repeatIndex</span><span
class="o">+</span><span
class="cn">1</span><span
class="sy">,</span><span
class="h"> </span><span
class="v">maxString</span><span
class="sy">.</span><span
class="e">length</span><span
class="sy">(</span><span
class="sy">)</span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-21"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="i">maxString</span><span
class="h"> </span><span
class="o">+</span><span
class="o">=</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="t">String</span><span
class="sy">(</span><span
class="h"> </span><span
class="r">new</span><span
class="h"> </span><span
class="t">char</span><span
class="sy">[</span><span
class="sy">]</span><span
class="sy">{</span><span
class="v">c</span><span
class="sy">[</span><span
class="i">i</span><span
class="sy">]</span><span
class="sy">}</span><span
class="h"> </span><span
class="sy">)</span><span
class="sy">;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-22"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-23"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-24"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-25"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-26"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-27"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div><div
class="crayon-line crayon-striped-line" id="crayon-52a3fbdb4ca4b-28"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="st">return</span><span
class="h"> </span><span
class="i">maxList</span><span
class="sy">;</span></div><div
class="crayon-line" id="crayon-52a3fbdb4ca4b-29"><span
class="h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span
class="sy">}</span></div></div></td></tr></table></div></div><p></p> ]]></content:encoded> </item> </channel> </rss>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk: basic
Page Caching using disk: enhanced

 Served from: leetcode.com @ 2013-12-07 20:55:55 by W3 Total Cache -->